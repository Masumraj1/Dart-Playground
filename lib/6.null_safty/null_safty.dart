// ===============================
// Dart Null Safety (Bangla Explainer)
// ===============================

void main() {
  // ===============================
  // 1Ô∏è‚É£ Null Safety ‡¶ï‡ßÄ?
  // ===============================
  /*
  üîπ Dart 2.12 ‡¶•‡ßá‡¶ï‡ßá Null Safety introduce ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§
  üîπ Null Safety ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßá ‡¶Ø‡ßá ‡¶ï‡ßã‡¶®‡ßã variable ‡¶¨‡¶æ object ‡¶ï‡¶ñ‡¶®‡ßã null ‡¶π‡¶¨‡ßá ‡¶ï‡¶ø‡¶®‡¶æ compile-time ‡¶è ‡¶ú‡¶æ‡¶®‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá‡•§
  üîπ ‡¶è‡¶§‡ßá runtime null errors (NullPointerException) ‡¶ï‡¶Æ‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º‡•§
  */

  // ===============================
  // 2Ô∏è‚É£ Non-nullable variable
  // ===============================
  int a = 10; // Non-nullable
  // a = null; // ‚ùå Error

  String name = 'Masum';
  // name = null; // ‚ùå Error

  print(a);   // Output: 10
  print(name); // Output: Masum

  // ===============================
  // 3Ô∏è‚É£ Nullable variable
  // ===============================
  int? b; // Nullable variable
  b = null; // ‚úÖ Allowed
  b = 20;

  String? nickName;
  nickName = null; // ‚úÖ Allowed
  print(b);        // Output: 20
  print(nickName); // Output: null

  // ===============================
  // 4Ô∏è‚É£ Null-aware operators
  // ===============================
  /*
  üîπ Null-aware operators Dart Null Safety ‡¶è‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶Ö‡¶Ç‡¶∂:
    1. ??   - default value
    2. ??=  - assign if null
    3. ?.   - null-aware access
    4. !    - null assertion (force non-null)
  */

  // 4.1 ?? (Default value)
  String? userName;
  String displayName = userName ?? 'Guest';
  print(displayName); // Output: Guest

  // 4.2 ??= (Assign if null)
  int? count;
  count ??= 5; // count ‡¶Ø‡¶¶‡¶ø null ‡¶π‡¶Ø‡¶º ‡¶§‡¶¨‡ßá 5 assign ‡¶π‡¶¨‡ßá
  print(count); // Output: 5

  // 4.3 ?. (Null-aware access)
  String? str;
  print(str?.length); // Output: null (no error)

  // 4.4 ! (Null assertion)
  String? message = 'Hello';
  print(message!.length); // Output: 5
  // message = null; print(message!.length); // ‚ùå runtime error

  // ===============================
  // 5Ô∏è‚É£ Late variables
  // ===============================
  /*
  üîπ Late keyword ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá variable declare ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ ‡¶™‡¶∞‡ßá initialize ‡¶π‡¶¨‡ßá
  */
  late String city;
  city = 'Dhaka';
  print(city); // Output: Dhaka

  // ===============================
  // 6Ô∏è‚É£ Nullable Collections
  // ===============================
  List<int>? numbers;       // nullable list
  numbers = [1, 2, 3];
  print(numbers);           // Output: [1, 2, 3]

  List<int>? nullNumbers;
  print(nullNumbers ?? []); // Output: [] (default empty list)

  // ===============================
  // 7Ô∏è‚É£ Real-life Use Case
  // ===============================
  /*
  üîπ API ‡¶•‡ßá‡¶ï‡ßá data ‡¶Ü‡¶∏‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá null
  üîπ User input optional ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá
  üîπ Null Safety ‡¶ì null-aware operators ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá safe handling ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º
  */
  String? apiName;
  String finalName = apiName ?? 'Default Name';
  print(finalName); // Output: Default Name

  // ===============================
  // 8Ô∏è‚É£ Summary (‡¶∏‡¶æ‡¶∞‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™)
  // ===============================
  /*
  üß© Dart Null Safety Summary:
  -----------------------------------------
  üîπ Non-nullable variable: type ? ‡¶õ‡¶æ‡¶°‡¶º‡¶æ declare
  üîπ Nullable variable: type ? ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá declare
  üîπ Null-aware operators:
      - ??   ‚Üí default value
      - ??=  ‚Üí assign if null
      - ?.   ‚Üí null-safe property/method access
      - !    ‚Üí null assertion (force non-null)
  üîπ late keyword ‚Üí runtime ‡¶è initialize ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
  üîπ Null Safety runtime null error ‡¶ï‡¶Æ‡¶æ‡¶Ø‡¶º
  üîπ Nullable collections ‚Üí safe merge / default values ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º
  -----------------------------------------
  */
}
